@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthProvider
@inject IAuthService AuthService
@inject IToastService ToastService

<p>Logga in. Har du inget konto ännu? <a href="register">Registrera dig nu!</a></p>
<div class="col-md-6">
    <div class="card">
        <div class="card-body">
            <EditForm Model="user" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <div class="form-group">
                    <label for="email">Epost</label>
                    <InputText id="email" @bind-Value="user.Email" class="form-control"></InputText>
                </div>
                <div class="form-group">
                    <label for="password">Lösenord</label>
                    <InputText id="password" @bind-Value="user.Password" class="form-control" type="password"></InputText>
                </div>
                <button type="submit" class="btn btn-primary">Logga in</button>
                <ValidationSummary></ValidationSummary>
            </EditForm>
        </div>
    </div>
</div>

@code {
    bool isAuthenticated = false;
    private UserLogin user = new UserLogin();

    private async void HandleLogin()
    {
        var result = await AuthService.Login(user);
        if (result.Success)
        {
            await LocalStorage.SetItemAsync<string>("authToken", result.Data);
            await AuthProvider.GetAuthenticationStateAsync();
        }
        else
        {
            ToastService.ShowError(result.Message);
        }
    }
}
